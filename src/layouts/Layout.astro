---
import { ClientRouter } from "astro:transitions";

import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import "@fontsource-variable/jetbrains-mono";
import "@fontsource/asul/400.css";
import "@fontsource/asul/700.css";

interface Props {
  title: string;
  footerWithoutBorder?: boolean;
}

const { title, footerWithoutBorder = false } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Bienvenido a la web oficial de Galarte."
    />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/images/favicon_light.png" />
    <title>{title}</title>
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@galarte" />
    <meta name="view-transition" content="same-origin" />
    <ClientRouter />
  </head>
  <body class="grid grid-rows-[auto_1fr_auto]">
    <Header />
    <slot />
    <Footer
      className={`
        ${footerWithoutBorder ? "border-t-0" : ""}
        `}
    />
  </body>
</html>
<style is:global>
  @font-face {
    font-family: "BankPrinter";
    src: url("/fonts/F25_Bank_Printer.ttf") format("ttf");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  html {
    font-family: "JetBrains Mono", monospace;
    color: #13151a;
    text-decoration: none;
    background: #13151a;
  }

  body,
  html {
    min-height: 100vh;
  }

  body {
    /* background-image: url("/images/background_desktop.webp"); */
    background-color: #f6f6f6;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
  }
</style>

<!-- <script>
  if (document.startViewTransition) {
    window.navigation.addEventListener("navigate", (event: any) => {
      const toUrl = new URL(event.destination.url);

      //si es una pagina externa no se ejecuta el script
      if (toUrl.origin !== location.origin) return;

      //si es la pagina de shop se ejecuta el script
      event.intercept({
        async handler() {
          //carga la pagina de destino
          //usando fetch
          const response = await fetch(toUrl.pathname);
          const html = await response.text();
          //tomamos solo el contenido del body con regex
          const [, data] = html.match(/<body>([\s\S]*)<\/body>/i);

          //utilizamos la api de View Transition API
          document.startViewTransition(() => {
            document.body.innerHTML = data;
            document.documentElement.scrollTop = 0;
          });
        },
      });
    });
  }
</script> -->
